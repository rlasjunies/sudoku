/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  SolutionsByRules,
  SudokuBoard,
  SudokuBoardCell,
  SudokuWizardConfiguration,
} from './services/sudoku/sudoku';

export namespace Components {
  interface AccButton {
    'styledanger': boolean;
    'styledefault': boolean;
    'styleinfo': boolean;
    'stylesuccess': boolean;
    'stylewarning': boolean;
  }
  interface AccHeader {
    'backbutton': boolean;
  }
  interface AccIcon {
    'iconUnicodeCode': string;
  }
  interface AccPage {
    'hide': () => Promise<void>;
    'name': string;
    'show': () => Promise<void>;
  }
  interface AccSwitch {
    'checkInitialValue': boolean;
  }
  interface AccTimer {
    'time': number;
  }
  interface AppRoot {
    'boardSolved': boolean;
    'route': string;
  }
  interface KeyBoard {
    'hideClearKey': boolean;
    'hideUndoKey': boolean;
    'remainingNumbers': number[];
  }
  interface PageAbout {}
  interface PageAuth {}
  interface SudokuBoardCellComponent {
    'cell': SudokuBoardCell;
    'drafted': boolean[];
  }
  interface SudokuBoardComponent {
    'board': SudokuBoard;
    'cellSelected': number;
    'gameOnGoing': boolean;
    'incorrectCells': number[];
    'lastCellOfTheGame': number;
    'solutionsByRules': SolutionsByRules;
    'solvedBlock': number;
    'solvedCol': number;
    'solvedRow': number;
    'wizardConfiguration': SudokuWizardConfiguration;
  }
  interface SudokuHome {}
  interface SudokuNew {}
  interface SudokuPage {}
  interface SudokuWizard {}
}

declare global {


  interface HTMLAccButtonElement extends Components.AccButton, HTMLStencilElement {}
  var HTMLAccButtonElement: {
    prototype: HTMLAccButtonElement;
    new (): HTMLAccButtonElement;
  };

  interface HTMLAccHeaderElement extends Components.AccHeader, HTMLStencilElement {}
  var HTMLAccHeaderElement: {
    prototype: HTMLAccHeaderElement;
    new (): HTMLAccHeaderElement;
  };

  interface HTMLAccIconElement extends Components.AccIcon, HTMLStencilElement {}
  var HTMLAccIconElement: {
    prototype: HTMLAccIconElement;
    new (): HTMLAccIconElement;
  };

  interface HTMLAccPageElement extends Components.AccPage, HTMLStencilElement {}
  var HTMLAccPageElement: {
    prototype: HTMLAccPageElement;
    new (): HTMLAccPageElement;
  };

  interface HTMLAccSwitchElement extends Components.AccSwitch, HTMLStencilElement {}
  var HTMLAccSwitchElement: {
    prototype: HTMLAccSwitchElement;
    new (): HTMLAccSwitchElement;
  };

  interface HTMLAccTimerElement extends Components.AccTimer, HTMLStencilElement {}
  var HTMLAccTimerElement: {
    prototype: HTMLAccTimerElement;
    new (): HTMLAccTimerElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLKeyBoardElement extends Components.KeyBoard, HTMLStencilElement {}
  var HTMLKeyBoardElement: {
    prototype: HTMLKeyBoardElement;
    new (): HTMLKeyBoardElement;
  };

  interface HTMLPageAboutElement extends Components.PageAbout, HTMLStencilElement {}
  var HTMLPageAboutElement: {
    prototype: HTMLPageAboutElement;
    new (): HTMLPageAboutElement;
  };

  interface HTMLPageAuthElement extends Components.PageAuth, HTMLStencilElement {}
  var HTMLPageAuthElement: {
    prototype: HTMLPageAuthElement;
    new (): HTMLPageAuthElement;
  };

  interface HTMLSudokuBoardCellComponentElement extends Components.SudokuBoardCellComponent, HTMLStencilElement {}
  var HTMLSudokuBoardCellComponentElement: {
    prototype: HTMLSudokuBoardCellComponentElement;
    new (): HTMLSudokuBoardCellComponentElement;
  };

  interface HTMLSudokuBoardComponentElement extends Components.SudokuBoardComponent, HTMLStencilElement {}
  var HTMLSudokuBoardComponentElement: {
    prototype: HTMLSudokuBoardComponentElement;
    new (): HTMLSudokuBoardComponentElement;
  };

  interface HTMLSudokuHomeElement extends Components.SudokuHome, HTMLStencilElement {}
  var HTMLSudokuHomeElement: {
    prototype: HTMLSudokuHomeElement;
    new (): HTMLSudokuHomeElement;
  };

  interface HTMLSudokuNewElement extends Components.SudokuNew, HTMLStencilElement {}
  var HTMLSudokuNewElement: {
    prototype: HTMLSudokuNewElement;
    new (): HTMLSudokuNewElement;
  };

  interface HTMLSudokuPageElement extends Components.SudokuPage, HTMLStencilElement {}
  var HTMLSudokuPageElement: {
    prototype: HTMLSudokuPageElement;
    new (): HTMLSudokuPageElement;
  };

  interface HTMLSudokuWizardElement extends Components.SudokuWizard, HTMLStencilElement {}
  var HTMLSudokuWizardElement: {
    prototype: HTMLSudokuWizardElement;
    new (): HTMLSudokuWizardElement;
  };
  interface HTMLElementTagNameMap {
    'acc-button': HTMLAccButtonElement;
    'acc-header': HTMLAccHeaderElement;
    'acc-icon': HTMLAccIconElement;
    'acc-page': HTMLAccPageElement;
    'acc-switch': HTMLAccSwitchElement;
    'acc-timer': HTMLAccTimerElement;
    'app-root': HTMLAppRootElement;
    'key-board': HTMLKeyBoardElement;
    'page-about': HTMLPageAboutElement;
    'page-auth': HTMLPageAuthElement;
    'sudoku-board-cell-component': HTMLSudokuBoardCellComponentElement;
    'sudoku-board-component': HTMLSudokuBoardComponentElement;
    'sudoku-home': HTMLSudokuHomeElement;
    'sudoku-new': HTMLSudokuNewElement;
    'sudoku-page': HTMLSudokuPageElement;
    'sudoku-wizard': HTMLSudokuWizardElement;
  }
}

declare namespace LocalJSX {
  interface AccButton {
    'onClick_'?: (event: CustomEvent<any>) => void;
    'styledanger'?: boolean;
    'styledefault'?: boolean;
    'styleinfo'?: boolean;
    'stylesuccess'?: boolean;
    'stylewarning'?: boolean;
  }
  interface AccHeader {
    'backbutton'?: boolean;
    'onBackClick'?: (event: CustomEvent<any>) => void;
  }
  interface AccIcon {
    'iconUnicodeCode'?: string;
  }
  interface AccPage {
    'name'?: string;
  }
  interface AccSwitch {
    'checkInitialValue'?: boolean;
    'onSwitch'?: (event: CustomEvent<any>) => void;
  }
  interface AccTimer {
    'time'?: number;
  }
  interface AppRoot {
    'boardSolved'?: boolean;
    'route'?: string;
  }
  interface KeyBoard {
    'hideClearKey'?: boolean;
    'hideUndoKey'?: boolean;
    'onClearClicked'?: (event: CustomEvent<any>) => void;
    'onDraftNumberClicked'?: (event: CustomEvent<any>) => void;
    'onNumberClicked'?: (event: CustomEvent<any>) => void;
    'onUndoClicked'?: (event: CustomEvent<any>) => void;
    'remainingNumbers'?: number[];
  }
  interface PageAbout {}
  interface PageAuth {}
  interface SudokuBoardCellComponent {
    'cell'?: SudokuBoardCell;
    'drafted'?: boolean[];
  }
  interface SudokuBoardComponent {
    'board'?: SudokuBoard;
    'cellSelected'?: number;
    'gameOnGoing'?: boolean;
    'incorrectCells'?: number[];
    'lastCellOfTheGame'?: number;
    'onCellSelection'?: (event: CustomEvent<any>) => void;
    'solutionsByRules'?: SolutionsByRules;
    'solvedBlock'?: number;
    'solvedCol'?: number;
    'solvedRow'?: number;
    'wizardConfiguration'?: SudokuWizardConfiguration;
  }
  interface SudokuHome {}
  interface SudokuNew {}
  interface SudokuPage {}
  interface SudokuWizard {}

  interface IntrinsicElements {
    'acc-button': AccButton;
    'acc-header': AccHeader;
    'acc-icon': AccIcon;
    'acc-page': AccPage;
    'acc-switch': AccSwitch;
    'acc-timer': AccTimer;
    'app-root': AppRoot;
    'key-board': KeyBoard;
    'page-about': PageAbout;
    'page-auth': PageAuth;
    'sudoku-board-cell-component': SudokuBoardCellComponent;
    'sudoku-board-component': SudokuBoardComponent;
    'sudoku-home': SudokuHome;
    'sudoku-new': SudokuNew;
    'sudoku-page': SudokuPage;
    'sudoku-wizard': SudokuWizard;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'acc-button': LocalJSX.AccButton & JSXBase.HTMLAttributes<HTMLAccButtonElement>;
      'acc-header': LocalJSX.AccHeader & JSXBase.HTMLAttributes<HTMLAccHeaderElement>;
      'acc-icon': LocalJSX.AccIcon & JSXBase.HTMLAttributes<HTMLAccIconElement>;
      'acc-page': LocalJSX.AccPage & JSXBase.HTMLAttributes<HTMLAccPageElement>;
      'acc-switch': LocalJSX.AccSwitch & JSXBase.HTMLAttributes<HTMLAccSwitchElement>;
      'acc-timer': LocalJSX.AccTimer & JSXBase.HTMLAttributes<HTMLAccTimerElement>;
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'key-board': LocalJSX.KeyBoard & JSXBase.HTMLAttributes<HTMLKeyBoardElement>;
      'page-about': LocalJSX.PageAbout & JSXBase.HTMLAttributes<HTMLPageAboutElement>;
      'page-auth': LocalJSX.PageAuth & JSXBase.HTMLAttributes<HTMLPageAuthElement>;
      'sudoku-board-cell-component': LocalJSX.SudokuBoardCellComponent & JSXBase.HTMLAttributes<HTMLSudokuBoardCellComponentElement>;
      'sudoku-board-component': LocalJSX.SudokuBoardComponent & JSXBase.HTMLAttributes<HTMLSudokuBoardComponentElement>;
      'sudoku-home': LocalJSX.SudokuHome & JSXBase.HTMLAttributes<HTMLSudokuHomeElement>;
      'sudoku-new': LocalJSX.SudokuNew & JSXBase.HTMLAttributes<HTMLSudokuNewElement>;
      'sudoku-page': LocalJSX.SudokuPage & JSXBase.HTMLAttributes<HTMLSudokuPageElement>;
      'sudoku-wizard': LocalJSX.SudokuWizard & JSXBase.HTMLAttributes<HTMLSudokuWizardElement>;
    }
  }
}


