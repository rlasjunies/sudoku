/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  SudokuBoard,
  SudokuBoardCell,
} from './services/sudoku/sudoku';


export namespace Components {

  interface AccButton {}
  interface AccButtonAttributes extends StencilHTMLAttributes {
    'onClick_'?: (event: CustomEvent) => void;
  }

  interface AccSwitch {}
  interface AccSwitchAttributes extends StencilHTMLAttributes {
    'onSwitch'?: (event: CustomEvent) => void;
  }

  interface KeyBoard {}
  interface KeyBoardAttributes extends StencilHTMLAttributes {
    'onKeyClicked'?: (event: CustomEvent) => void;
  }

  interface KeyBoard2 {
    'draftMode': boolean;
    'remainingNumbers': number[];
  }
  interface KeyBoard2Attributes extends StencilHTMLAttributes {
    'draftMode'?: boolean;
    'onClearClicked'?: (event: CustomEvent) => void;
    'onNumberClicked'?: (event: CustomEvent) => void;
    'remainingNumbers'?: number[];
  }

  interface SudokuBoardCellComponent {
    'candidates': boolean[];
    'cell': SudokuBoardCell;
  }
  interface SudokuBoardCellComponentAttributes extends StencilHTMLAttributes {
    'candidates'?: boolean[];
    'cell'?: SudokuBoardCell;
  }

  interface SudokuBoardComponent {
    'board': SudokuBoard;
    'boardSolved': boolean;
    'cellSelected': number;
    'incorrectCells': number[];
    'solvedCol': number;
    'solvedRow': number;
    'solvedZone': number;
  }
  interface SudokuBoardComponentAttributes extends StencilHTMLAttributes {
    'board'?: SudokuBoard;
    'boardSolved'?: boolean;
    'cellSelected'?: number;
    'incorrectCells'?: number[];
    'onCellSelection'?: (event: CustomEvent) => void;
    'solvedCol'?: number;
    'solvedRow'?: number;
    'solvedZone'?: number;
  }

  interface AccPage {
    'hide': () => void;
    'show': () => void;
  }
  interface AccPageAttributes extends StencilHTMLAttributes {}

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface CreateNewBoard {}
  interface CreateNewBoardAttributes extends StencilHTMLAttributes {}

  interface SplashScreenPage {}
  interface SplashScreenPageAttributes extends StencilHTMLAttributes {}

  interface SudokuPage {}
  interface SudokuPageAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AccButton': Components.AccButton;
    'AccSwitch': Components.AccSwitch;
    'KeyBoard': Components.KeyBoard;
    'KeyBoard2': Components.KeyBoard2;
    'SudokuBoardCellComponent': Components.SudokuBoardCellComponent;
    'SudokuBoardComponent': Components.SudokuBoardComponent;
    'AccPage': Components.AccPage;
    'AppRoot': Components.AppRoot;
    'CreateNewBoard': Components.CreateNewBoard;
    'SplashScreenPage': Components.SplashScreenPage;
    'SudokuPage': Components.SudokuPage;
  }

  interface StencilIntrinsicElements {
    'acc-button': Components.AccButtonAttributes;
    'acc-switch': Components.AccSwitchAttributes;
    'key-board': Components.KeyBoardAttributes;
    'key-board2': Components.KeyBoard2Attributes;
    'sudoku-board-cell-component': Components.SudokuBoardCellComponentAttributes;
    'sudoku-board-component': Components.SudokuBoardComponentAttributes;
    'acc-page': Components.AccPageAttributes;
    'app-root': Components.AppRootAttributes;
    'create-new-board': Components.CreateNewBoardAttributes;
    'splash-screen-page': Components.SplashScreenPageAttributes;
    'sudoku-page': Components.SudokuPageAttributes;
  }


  interface HTMLAccButtonElement extends Components.AccButton, HTMLStencilElement {}
  var HTMLAccButtonElement: {
    prototype: HTMLAccButtonElement;
    new (): HTMLAccButtonElement;
  };

  interface HTMLAccSwitchElement extends Components.AccSwitch, HTMLStencilElement {}
  var HTMLAccSwitchElement: {
    prototype: HTMLAccSwitchElement;
    new (): HTMLAccSwitchElement;
  };

  interface HTMLKeyBoardElement extends Components.KeyBoard, HTMLStencilElement {}
  var HTMLKeyBoardElement: {
    prototype: HTMLKeyBoardElement;
    new (): HTMLKeyBoardElement;
  };

  interface HTMLKeyBoard2Element extends Components.KeyBoard2, HTMLStencilElement {}
  var HTMLKeyBoard2Element: {
    prototype: HTMLKeyBoard2Element;
    new (): HTMLKeyBoard2Element;
  };

  interface HTMLSudokuBoardCellComponentElement extends Components.SudokuBoardCellComponent, HTMLStencilElement {}
  var HTMLSudokuBoardCellComponentElement: {
    prototype: HTMLSudokuBoardCellComponentElement;
    new (): HTMLSudokuBoardCellComponentElement;
  };

  interface HTMLSudokuBoardComponentElement extends Components.SudokuBoardComponent, HTMLStencilElement {}
  var HTMLSudokuBoardComponentElement: {
    prototype: HTMLSudokuBoardComponentElement;
    new (): HTMLSudokuBoardComponentElement;
  };

  interface HTMLAccPageElement extends Components.AccPage, HTMLStencilElement {}
  var HTMLAccPageElement: {
    prototype: HTMLAccPageElement;
    new (): HTMLAccPageElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLCreateNewBoardElement extends Components.CreateNewBoard, HTMLStencilElement {}
  var HTMLCreateNewBoardElement: {
    prototype: HTMLCreateNewBoardElement;
    new (): HTMLCreateNewBoardElement;
  };

  interface HTMLSplashScreenPageElement extends Components.SplashScreenPage, HTMLStencilElement {}
  var HTMLSplashScreenPageElement: {
    prototype: HTMLSplashScreenPageElement;
    new (): HTMLSplashScreenPageElement;
  };

  interface HTMLSudokuPageElement extends Components.SudokuPage, HTMLStencilElement {}
  var HTMLSudokuPageElement: {
    prototype: HTMLSudokuPageElement;
    new (): HTMLSudokuPageElement;
  };

  interface HTMLElementTagNameMap {
    'acc-button': HTMLAccButtonElement
    'acc-switch': HTMLAccSwitchElement
    'key-board': HTMLKeyBoardElement
    'key-board2': HTMLKeyBoard2Element
    'sudoku-board-cell-component': HTMLSudokuBoardCellComponentElement
    'sudoku-board-component': HTMLSudokuBoardComponentElement
    'acc-page': HTMLAccPageElement
    'app-root': HTMLAppRootElement
    'create-new-board': HTMLCreateNewBoardElement
    'splash-screen-page': HTMLSplashScreenPageElement
    'sudoku-page': HTMLSudokuPageElement
  }

  interface ElementTagNameMap {
    'acc-button': HTMLAccButtonElement;
    'acc-switch': HTMLAccSwitchElement;
    'key-board': HTMLKeyBoardElement;
    'key-board2': HTMLKeyBoard2Element;
    'sudoku-board-cell-component': HTMLSudokuBoardCellComponentElement;
    'sudoku-board-component': HTMLSudokuBoardComponentElement;
    'acc-page': HTMLAccPageElement;
    'app-root': HTMLAppRootElement;
    'create-new-board': HTMLCreateNewBoardElement;
    'splash-screen-page': HTMLSplashScreenPageElement;
    'sudoku-page': HTMLSudokuPageElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
